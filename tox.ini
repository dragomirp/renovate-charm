# Copyright 2023 Dragomir Penev
# See LICENSE file for licensing details.

[tox]
skipsdist=True
skip_missing_interpreters = True
envlist = format, lint, unit

[vars]
src_path = {toxinidir}/src/
tst_path = {toxinidir}/tests/
;lib_path = {toxinidir}/lib/charms/operator_name_with_underscores
all_path = {[vars]src_path} {[vars]tst_path}

[testenv]
setenv =
  PYTHONPATH = {toxinidir}:{toxinidir}/lib:{[vars]src_path}
  PYTHONBREAKPOINT=pdb.set_trace
  PY_COLORS=1
  juju2: LIBJUJU="2.9.42.2"  # libjuju2
  juju3: LIBJUJU="3.1.0.1"  # libjuju3
passenv =
  PYTHONPATH
  CHARM_BUILD_DIR
  MODEL_SETTINGS
deps =
    poetry

[testenv:format]
description = Apply coding style standards to code
commands =
    poetry install --only format
    poetry run black {[vars]all_path}
    poetry run ruff --fix {[vars]all_path}

[testenv:lint]
description = Check code against coding style standards

commands =
    poetry install --only format,lint
    poetry run codespell {toxinidir} \
              --skip {toxinidir}/.git \
              --skip {toxinidir}/.tox \
              --skip {toxinidir}/build \
              --skip {toxinidir}/lib \
              --skip {toxinidir}/venv \
              --skip {toxinidir}/.mypy_cache \
              --skip {toxinidir}/icon.svg \
               --skip {tox_root}/poetry.lock

    poetry run ruff {[vars]all_path}
    poetry run black --check --diff {[vars]all_path}

[testenv:unit]
description = Run unit tests
commands =
    poetry install --with unit
    poetry export -f requirements.txt -o requirements.txt
    poetry run coverage run --source={[vars]src_path} \
                 -m pytest \
                 --ignore={[vars]tst_path}integration \
                 --tb native \
                 -v \
                 -s \
                 {posargs}
    poetry run coverage report

[testenv:integration-{juju2,juju3}]
description = Run integration tests
commands =
    poetry install --with integration
    poetry install juju=={env: LIBJUJU}
    poetry export -f requirements.txt -o requirements.txt
    poetry run pytest -v \
           -s \
           --tb native \
           --ignore={[vars]tst_path}unit \
           --log-cli-level=INFO \
           {posargs}

[testenv:poetry-lock]
description = Install, lock and export poetry dependencies
commands =
    poetry lock
    poetry export -f requirements.txt -o requirements.txt
